df_sleep <- as.Date(df_sleep$date)
df_sleep$date <- as.Date(df_sleep$date, format="%m-%d-%Y")
print(df_sleep)
df_sleep <- bind_rows(df_slp1, df_slp2)
df_stn <- bind_rows(df_stn1, df_stn2)
df_sleep <- bind_rows(df_slp1, df_slp2)
df_sleep$date <- as.Date(df_sleep$date, format="%m-%d-%Y")
print(df_sleep)
df_sleep <- bind_rows(df_slp1, df_slp2)
print(df_sleep)
df_sleep$date <- substr(df_sleep$date, 1, 10)
df_sleep <- bind_rows(df_slp1, df_slp2)
df_sleep$date <- as.Date(df_sleep$date, format="%m-%d-%Y")
print(df_sleep)
df_sleep <- bind_rows(df_slp1, df_slp2)
print(df_sleep)
df_sleep$date <- substr(df_sleep$date, 1, 10)
print(df_sleep)
print(df_sleep)
write.csv(df_sleep, "minuteSleep_merged.csv", row.names = FALSE)
df_sleep <- bind_rows(df_slp1, df_slp2)
df_sleep$date <- substr(df_sleep$date, 1, 9)
print(df_sleep)
write.csv(df_sleep, "minuteSleep_merged.csv", row.names = FALSE)
library(tidyr)
df_steps1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/hourlySteps_merged.csv')
df_steps2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/hourlySteps_merged.csv')
df_step <- bind_rows(df_steps1, df_steps2)
df_step <- df_step %>%
separate(ActivityHour, into = c("date", "hour"), sep = " ")
print(df_step)
df_sleep <- bind_rows(df_slp1, df_slp2)
print(df_step)
df_sleep <- bind_rows(df_slp1, df_slp2)
df_sleep <- bind_rows(df_slp1, df_slp2)
print(df_step)
df_step <- bind_rows(df_steps1, df_steps2)
print(df_step)
df_step$Prefix <- substr(df_step$date, 1, 9)
df_step$Suffix <- substr(df_step$step, 10, nchar(df_step$date))
print(df_step)
View(df_step)
split_datetime <- strsplit(date, " ")[[1]]
date <- split_datetime[1]  # First part is the date
time <- split_datetime[2]  # Second part is the time
split_datetime <- strsplit(df_sleep$date, " ")[[1]]
date <- split_datetime[1]  # First part is the date
time <- split_datetime[2]  # Second part is the time
print(date)  # "3/25/2016"
print(df_sleep)  # "3/25/2016"
str(df_sleep)  # "8:00:00 PM"
df_sleep$date <- split_datetime[1]  # First part is the date
df_sleep$time <- split_datetime[2]  # Second part is the time
print(df_sleep)  # "3/25/2016"
str(df_sleep)  # "8:00:00 PM"
View(df_sleep)  # "8:00:00 PM"
df_steps1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/hourlySteps_merged.csv')
df_steps2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/hourlySteps_merged.csv')
df_step <- bind_rows(df_steps1, df_steps2)
write.csv(df_steps, "hourlySteps_merged.csv", row.names = FALSE)
View(df_step)  # "8:00:00 PM"
df_step$date <- split_datetime[1]  # First part is the date
df_step$time <- split_datetime[2]  # Second part is the time
split_datetime <- strsplit(df_step$ActivityHour, " ")[[1]]
df_step$date <- split_datetime[1]  # First part is the date
df_step$time <- split_datetime[2]  # Second part is the time
print(df_tepep)  # "3/25/2016"
print(df_step)  # "3/25/2016"
View(df_step)  # "8:00:00 PM"
write.csv(df_steps, "hourlySteps_merged.csv", row.names = FALSE)
library(lubridate)
install.packages("lubridate")
install.packages("lubridate")
library(lubridate)
df_steps1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/hourlySteps_merged.csv')
df_steps2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/hourlySteps_merged.csv')
df_step <- bind_rows(df_steps1, df_steps2)
# Separate date and time
date <- as.Date(datetime_parsed)
datetime_parsed <- mdy_hms(df_step$ActivityHour)
# Separate date and time
date <- as.Date(datetime_parsed)
time <- format(datetime_parsed, "%I:%M:%S %p")
# Separate date and time
df_step$date <- as.Date(datetime_parsed)
df_step$time <- format(datetime_parsed, "%I:%M:%S %p")
print(df_step)  # "2016-03-25"
View(df_step)
write.csv(df_steps, "hourlySteps_merged.csv", row.names = FALSE) #export to finalized cleaning
write.csv(df_steps, "hourlySteps_merged.csv", row.names = FALSE) #export to finalized cleaning
write.csv(df_steps, "hourlySteps_merged.csv", row.names = FALSE) #export to finalized cleaning
View(df_step)
getwd()
write.csv(df_steps, "hourlySteps_merged1.csv", row.names = FALSE) #export to finalized cleaning
write.csv(df_step, "hourlySteps_merged.csv", row.names = FALSE) #export to finalized cleaning
str(df_step)
df_step <- select(data, -df_step)
df_step <- select(df_step, -ActivityHour)
df
df_step
str(df_step)
df_step <- rename(df_step, totalStep = StepTotal)
df_step
df_step <- select(user_id, date, time, totalStep)
df_step <- rename(df_step, user_id = Id)
df_step <- select(user_id, date, time, totalStep)
View(df_step)
df_step <- select(user_id, date, time, totalStep)
df_step <- select(df_step, user_id, date, time, totalStep)
View(df_step)
df_step <- format(df_step$date, "%m-%d-%Y")
formatted_date
df_step
View(df_step)
df_step <- bind_rows(df_steps1, df_steps2)
# Separate date and time
df_step$date <- as.Date(datetime_parsed)
df_step$time <- format(datetime_parsed, "%I:%M:%S %p")
print(df_step)
View(df_step)
write.csv(df_step, "hourlySteps_merged.csv", row.names = FALSE) #export to finalized cleaning
str(df_step)
df_step <- select(df_step, -ActivityHour)
str(df_step)
df_step <- rename(df_step, user_id = Id)
df_step <- rename(df_step, totalStep = StepTotal)
df_step <- select(df_step, user_id, date, time, totalStep)
df_step$date <- format(df_step$date, "%m-%d-%Y")
df_step
write.csv(df_step, "hourlySteps_merged.csv", row.names = FALSE) #export to finalized cleaning
write.csv(df_step, "hourlySteps_cleaned.csv", row.names = FALSE) #export to finalized cleaning
df_hcm1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/hourlyCalories_merged.csv')
df_hcm2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/hourlyCalories_merged.csv')
df_Calories <- bind_rows(df_hcm1, df_hcm2)
df_calories <- bind_rows(df_hcm1, df_hcm2)
write.csv(df_calories, "hourlyCalories_merged.csv", row.names = FALSE)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
datetime_parsed <- mdy_hms(df_calories $ActivityHour)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories$date <- as.Date(datetime_parsed)
df_calories$time <- format(datetime_parsed, "%I:%M:%S %p")
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_step <- select(df_step, -ActivityHour)#drop ActivityHour
df_calories$date <- format(df_calories$date, "%m-%d-%Y")
df_step <- rename(df_step, user_id = Id)
df_step <- rename(df_step, totalStep = StepTotal)
df_calories <- rename(df_calories, user_id = Id)
df_calories <- rename(df_calories, caloriesExpenditure = calories)
df_calories <- select(df_calories, user_id, date, time, caloriesExpenditure)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_step <- select(df_step, -ActivityHour)#drop ActivityHour
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories <- select(df_calories, -ActivityHour)#drop ActivityHour
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories <- select(df_calories, user_id, date, time, caloriesExpenditure)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories <- rename(df_calories, user_id = Id)
df_calories <- rename(df_calories, caloriesExpenditure = calories)
df_calories <- select(df_calories, user_id, date, time, caloriesExpenditure)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories <- rename(df_calories, caloriesExpenditure = Calories)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories <- select(df_calories, user_id, date, time, caloriesExpenditure)
#Cleaning df_calories using lubridate to separate date time
View(df_calories)
df_calories <- df_calories %>% arrange(user_id, date)  # Sort by id first, then age
print(df_calories)
write.csv(df_calories, "hourlyCalories_data.csv", row.names = FALSE) #export to finalized cleaning
df_met1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/minuteMETsNarrow_merged.csv')
df_met2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/minuteMETsNarrow_merged.csv')
df_mets <- bind_rows(df_met1, df_met2)
write.csv(df_mets, "minuteMETsNarrow_merged.csv", row.names = FALSE)
View(df_mets1)
View(df_mets1)
View(df_met1)
df_met2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/minuteMETsNarrow_merged.csv')
View(df_met2)
df_mets <- bind_rows(df_met1, df_met2)
View(df_mets)
datetime_parsed <- mdy_hms(df_mets $ActivityHour) #changing string to usable datetime DT
df_mets$date <- as.Date(datetime_parsed)
df_mets$time <- format(datetime_parsed, "%I:%M:%S %p")
df_mets$date <- format(df_mets$date, "%m-%d-%Y")
#Cleaning df_METs using lubridate to separate date time
View(df_mets)
datetime_parsed <- mdy_hms(df_mets $ActivityHour) #changing string to usable datetime DT
df_mets$date <- as.Date(datetime_parsed)
#Cleaning df_METs using lubridate to separate date time
View(df_mets)
datetime_parsed <- mdy_hms(df_mets $ActivityMinute) #changing string to usable datetime DT
df_mets$date <- as.Date(datetime_parsed)
df_mets$time <- format(datetime_parsed, "%I:%M:%S %p")
df_mets$date <- format(df_mets$date, "%m-%d-%Y")
df_mets <- select(df_mets, -ActivityMinute)#drop ActivityMinute
df_calories <- rename(df_calories, user_id = Id)
df_mets <- select(df_mets, -ActivityMinute)#drop ActivityMinute
df_mets <- rename(df_mets, user_id = Id)
df_mets <- rename(df_mets, EnergyExpenditure = METs)
df_mets <- rename(df_mets, energyExpenditure = EnergyExpenditure)
df_mets <- select(df_mets, user_id, date, time, energyExpenditure)
df_mets <- df_mets %>% arrange(user_id, date)  # Sort by id first, then age
write.csv(df_mets, "minuteMETs_data.csv", row.names = FALSE) #export to finalized cleaning
View(df_mets)
write.csv(df_mets, "minuteMETs_data.csv", row.names = FALSE, quote = TRUE) #export to finalized cleaning
View(df_sleep)
df_slp1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/minuteSleep_merged.csv')
df_slp2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_4.12.16-5.12.16/minuteSleep_merged.csv')
df_sleep <- bind_rows(df_slp1, df_slp2)
View(df_sleep)
datetime_parsed <- mdy_hms(df_calories $date) #changing string to usable datetime DT
df_sleep$date <- as.Date(datetime_parsed)
df_sleep$time <- format(datetime_parsed, "%I:%M:%S %p")
datetime_parsed <- mdy_hms(df_sleep $date) #changing string to usable datetime DT
df_sleep$date <- as.Date(datetime_parsed)
df_sleep$time <- format(datetime_parsed, "%I:%M:%S %p")
df_sleep$date <- format(df_calories$date, "%m-%d-%Y")
#Cleaning df_step using lubridate to separate date time
View(df_sleep)
df_sleep$date <- format(df_sleep$date, "%m-%d-%Y")
df_sleep <- rename(df_sleep, user_id = Id)
df_sleep <- select(df_sleep, user_id, date, time, value)
df_sleep <- df_sleep %>% arrange(user_id, date)  # Sort by id first, then age
write.csv(df_sleep, "hourlyCalories_data.csv", row.names = FALSE) #export to finalized cleaning
#Cleaning df_step using lubridate to separate date time
View(df_sleep)
write.csv(df_sleep, "minuteSleep_data.csv", row.names = FALSE) #export to finalized cleaning
write.csv(df_calories, "hourlyCalories_data.csv", row.names = FALSE) #export to finalized cleaning
df_sleep <- df_sleep %>% arrange(user_id, date, time)  # Sort by id first, then age
df_calories <- reead.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
View(df_calories)
df_calories <- reead.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
df_calories <- read.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
View(df_calories)
library(tidyverse)
library(lubridate)
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date), max(date), by="day")) %>%
ungroup()
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), max(date), by="day")) %>%
ungroup()
str(df_calories)
df_calories$date <- as.Date(df_calories$date, format="%m-%d-%Y")
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), max(date), by="day")) %>%
ungroup()
View(df_complete)
getwd()
setwd('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned')
getwd()
#reading file dailyCalories
df_calories <- read.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
View(df_calories)
str(df_calories) # R read date as char
df_calories$date <- as.Date(df_calories$date, format="%m-%d-%Y")
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), max(date), by="day")) %>%
ungroup()
#reading file dailyCalories
df_calories <- read.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
str(df_calories) # R read date as char
df_calories$date <- as.Date(df_calories$date, format="%m-%d-%Y")
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), max(date), by="day")) %>%
ungroup()
#importing packages
library(tidyverse)
library(lubridate)
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), max(date), by="day")) %>%
ungroup()
View(df_complete)
# Write to a CSV file
write.csv(df_complete, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned", row.names = FALSE)
# Write to a CSV file
write.csv(df_complete, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data_v01", row.names = FALSE)
# Write to a CSV file
write.csv(df_complete, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data_v01.csv", row.names = FALSE)
library(DBI)
install.packages(DBI)
library(DBI)
df_complete[is.na(df_complete)] <- ""
# Write to a CSV file
write.csv(df_complete, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data_v01.csv", row.names = FALSE, na='')
library(dplyr)
df_him1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/archive/mturkfitbit_export_3.12.16-4.11.16/hourlyIntensities_merged.csv')
df_him1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/mturkfitbit_export_3.12.16-4.11.16/hourlyIntensities_merged.csv')
df_him2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/mturkfitbit_export_4.12.16-5.12.16/hourlyIntensities_merged.csv')
df_intensity <- bind_rows(df_him1, df_him2)
#Cleaning df_Intensities using lubridate to separate date time
View(df_intensity)
datetime_parsed <- mdy_hms(df_intensity $ActivityMinute) #changing string to usable datetime DT
df_intensity$date <- as.Date(datetime_parsed)
datetime_parsed <- mdy_hms(df_intensity $ActivityMinute) #changing string to usable datetime DT
df_intensity$date <- as.Date(datetime_parsed)
datetime_parsed <- mdy_hms(df_intensity $ActivityHour) #changing string to usable datetime DT
df_intensity$date <- as.Date(datetime_parsed)
df_intensity$time <- format(datetime_parsed, "%I:%M:%S %p")
df_intensity$date <- format(df_intensity$date, "%m-%d-%Y")
df_intensity <- select(df_intensity, -ActivityHour)#drop ActivityMinute
df_intensity <- rename(df_intensity, user_id = Id)
df_intensity <- rename(df_intensity, total_intensity = totalIntensity)
df_intensity <- rename(df_intensity, total_intensity = TotalIntensity)
df_intensity <- rename(df_intensity, average_intensity = AverageIntensity)
df_intensity <- select(df_intensity, user_id, date, time, total_intensity, average_intensity)
df_intensity <- df_intensity %>% arrange(user_id, date)  # Sort by id first, then age
View(df_mets)
View(df_Intensity)
View(df_Intensity)
View(df_intensity)
write.csv(df_intensity, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/hourlyIntensity_data.csv", row.names = FALSE, quote = TRUE) #export to finalized cleaning
df_intensity <- df_intensity %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == 0, NA, .))) #change 0 to NA to standardize
df_intensity <- df_intensity %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == 0, NA, .))) #change 0 to NA to standardize
View(df_intensity)
write.csv(df_intensity, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/hourlyIntensity_data.csv", row.names = FALSE, quote = TRUE) #export to finalized cleaning
df_intensity <- df_intensity %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == 0, "", .))) #change 0 to NA to standardize
View(df_intensity)
View(df_intensity)
df_intensity <- df_intensity %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == NA, "", .))) #change 0 to NA to standardize
View(df_intensity)
df_him1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/mturkfitbit_export_3.12.16-4.11.16/hourlyIntensities_merged.csv')
df_him2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/mturkfitbit_export_4.12.16-5.12.16/hourlyIntensities_merged.csv')
df_intensity <- bind_rows(df_him1, df_him2)
write.csv(df_him, "hourlyIntensities_merged.csv", row.names = FALSE)
df_him1 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/mturkfitbit_export_3.12.16-4.11.16/hourlyIntensities_merged.csv')
df_him2 <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/mturkfitbit_export_4.12.16-5.12.16/hourlyIntensities_merged.csv')
df_intensity <- bind_rows(df_him1, df_him2)
#Cleaning df_Intensities using lubridate to separate date time
View(df_intensity)
datetime_parsed <- mdy_hms(df_intensity $ActivityHour) #changing string to usable datetime DT
df_intensity$date <- as.Date(datetime_parsed)
df_intensity$time <- format(datetime_parsed, "%I:%M:%S %p")
df_intensity$date <- format(df_intensity$date, "%m-%d-%Y")
df_intensity <- select(df_intensity, -ActivityHour)#drop ActivityMinute
df_intensity <- rename(df_intensity, user_id = Id)
df_intensity <- rename(df_intensity, total_intensity = TotalIntensity)
df_intensity <- rename(df_intensity, average_intensity = AverageIntensity)
df_intensity <- select(df_intensity, user_id, date, time, total_intensity, average_intensity)
df_intensity <- df_intensity %>% arrange(user_id, date)  # Sort by id first, then age
df_intensity <- df_intensity %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == 0, "", .))) #change 0 to NA to standardize
View(df_intensity)
write.csv(df_intensity, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/hourlyIntensity_data.csv", row.names = FALSE, quote = TRUE) #export to finalized cleaning
View(df_step)
df_step <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailySteps_data.csv')
df_intensity <- df_intensity %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == 0, "", .))) #change 0 to NA to standardize
View(df_step)
write.csv(df_intensity, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/hourlyIntensity_data.csv", row.names = FALSE, quote = TRUE) #export to finalized cleaning
df_step <- read.csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailySteps_data.csv')
df_intensity <- df_step %>%
mutate(across(c(average_intensity, total_intensity), ~ ifelse(. == 0, "", .))) #change 0 to NA to standardize
View(df_step)
df_step$totalStep[df_step$totalStep == 0] <- "" #change 0 to NA to standardize
df_step <- rename(df_step, totalStep = totalStep)
View(df_step)
df_step <- rename(df_step, tota_step = totalStep)
df_step <- rename(df_step, total_step = totalStep)
df_step <- rename(df_step, total_step = tota_Step)
View(df_step)
df_step <- rename(df_step, total_step = tota_step)
View(df_step)
write.csv(df_step, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailySteps_data.csv", row.names = FALSE, quote = TRUE)
#importing packages
library(tidyverse)
library(lubridate)
#reading file dailyCalories
df_calories <- read.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
View(df_calories)
str(df_calories) # R read date as char
df_calories$date <- as.Date(df_calories$date, format="%m-%d-%Y")
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), min(date, na.rm = TRUE) + 61, by = "day")) %>%
ungroup()
df_complete[is.na(df_complete)] <- ""
View(df_complete)
#reading file dailyCalories
df_calories <- read.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
View(df_calories)
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), min(date, na.rm = TRUE) + 61, by = "day")) %>%
ungroup()
str(df_calories) # R read date as char
df_calories$date <- as.Date(df_calories$date, format="%m-%d-%Y")
str(df_calories) # R read date as char
df_complete <- df_calories %>%
group_by(user_id) %>%
complete(date = seq(min(date, na.rm = TRUE), min(date, na.rm = TRUE) + 61, by = "day")) %>%
ungroup()
df_complete[is.na(df_complete)] <- ""
View(df_calories)
#reading file dailyCalories
df_calories <- read.csv("/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data.csv")
View(df_calories)
df_calories$date <- as.Date(df_calories$date, format="%m-%d-%Y")
# Get all unique user_ids
user_ids <- unique(df_calories$user_id)
# Create a complete dataframe with all user_id-date combinations
df_full <- expand.grid(user_id = user_ids, date = full_dates)
# Create a complete dataframe with all user_id-date combinations
df_full <- expand.grid(user_id = user_ids, date = full_dates)
full_dates <- seq(as.Date("2016-03-12"), as.Date("2016-05-12"), by = "day")
# Get all unique user_ids
user_ids <- unique(df_calories$user_id)
# Create a complete dataframe with all user_id-date combinations
df_full <- expand.grid(user_id = user_ids, date = full_dates)
# Left join to merge with the existing data
df_complete <- df_full %>%
left_join(df_calories, by = c("user_id", "date"))
# Replace NA values with empty string
df_complete[is.na(df_complete)] <- ""
# View the result
head(df_complete)
View(df_complete)
df_complete$date <- format(as.Date(df_complete$date), "%m-%d-%Y")
# Write to a CSV file
write.csv(df_complete, "/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyCalories_data_v02.csv", row.names = FALSE, na='')
library(dplyr)
library(skimr)
df <- read_csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyIntensity_data.csv')
df
df %>% skim()
View(df %>% skim())
library(data.table)
install.packages("data.table")
install.packages("data.table")
library(data.table)
df <- as.data.table(df)
df[, .(
Min = min(Value, na.rm = TRUE),
Max = max(Value, na.rm = TRUE),
Average = mean(Value, na.rm = TRUE),
StDev = sd(Value, na.rm = TRUE),
Count = .N,
NullCount = sum(is.na(Value)),
DistinctCount = uniqueN(Value)
)]
df <- read_csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyIntensity_data.csv')
df <- as.data.table(df)
df[, .(
Min = min(Value, na.rm = TRUE),
Max = max(Value, na.rm = TRUE),
Average = mean(Value, na.rm = TRUE),
StDev = sd(Value, na.rm = TRUE),
Count = .N,
NullCount = sum(is.na(Value)),
DistinctCount = uniqueN(Value)
)]
df[, .(
Min = min(total_intensity, na.rm = TRUE),
Max = max(total_intensity, na.rm = TRUE),
Average = mean(total_intensity, na.rm = TRUE),
StDev = sd(total_intensity, na.rm = TRUE),
Count = .N,
NullCount = sum(is.na(total_intensity)),
DistinctCount = uniqueN(total_intensity)
)]
columns_to_summarize <- c("total_intensity", "average_intensity")
# Use lapply to calculate summary statistics for each column
df[, lapply(.SD, function(x) list(
Min = min(x, na.rm = TRUE),
Max = max(x, na.rm = TRUE),
Average = mean(x, na.rm = TRUE),
StDev = sd(x, na.rm = TRUE),
NullCount = sum(is.na(x)),
DistinctCount = uniqueN(x)
)), .SDcols = columns_to_summarize]
options(scipen = 999)
skim(df)
df[, .(DistinctCount = uniqueN(Column1))]
df[, .(DistinctCount = uniqueN(average_intensity, total_intensity))]
df[, .(DistinctCount = uniqueN(average_intensity))]
options(scipen = 999)
skim(df)
View(skim(df))
df[, .(DistinctCount = uniqueN(average_intensity))]
df_step <- read_csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailySteps_data.csv')
View(df_step %>% skim())
df[, .(DistinctCount = uniqueN(date))]
df[, .(DistinctCount = uniqueN(average_intensity))]
df_intensity <- read_csv('/Users/farhanhauzannadhir/Documents/R_Projects/Capstone Project Coursera DA/fitbit_longdata_merged/cleaned/dailyIntensity_data.csv')
View(skim(df_intensity))
df_intensity[, .(DistinctCount = uniqueN(date)]
View(df_intensity %>% skim())
df[, .(DistinctCount = uniqueN(date)]
df_intensity[, .(DistinctCount = uniqueN(date))]
df_intensity[, .(DistinctCount = uniqueN(date))]
library(data.table)
df_intensity[, .(DistinctCount = uniqueN(date))]
df_intensity <- data.table(df_intensity)
df_intensity[, .(DistinctCount = uniqueN(date))]
